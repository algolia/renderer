name: Renderscript

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    env:
      PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: "true"
    steps:
      - uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version-file: .nvmrc
          cache: yarn

      - run: yarn install

      - name: Run Linter
        run: yarn lint

  tests:
    runs-on: ubuntu-latest
    name: Tests
    needs: lint
    steps:
      - uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version-file: .nvmrc
          cache: yarn

      - run: yarn install

      - name: Build
        run: yarn build

      - name: Background process
        run: |
          yarn ci:start &

      - name: Run test
        run: yarn test

  release:
    runs-on: ubuntu-latest
    name: Tests
    needs: tests
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version-file: .nvmrc
          cache: yarn

      - name: Release
        run: yarn semantic-release

  build-docker:
    runs-on: ubuntu-latest
    name: Build Dockers
    # needs: tests
    # if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2

      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version-file: .nvmrc
          cache: yarn

      - name: Setting env var
        id: env_var
        shell: bash
        run: |
          echo "::set-output name=RENDERSCRIPT_VERSION::$(node -e 'console.log(require("./package.json").version)')"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Main Image
        uses: docker/build-push-action@v2.7.0
        with:
          file: Dockerfile
          context: .
          # platforms: linux/amd64,linux/arm64/v8
          push: false
          load: true
          tags: |
            algolia/renderscript:latest
            algolia/renderscript:${{ steps.env_var.outputs.RENDERSCRIPT_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ steps.env_var.outputs.RENDERSCRIPT_VERSION }}

      - name: Test Image
        run: ./scripts/test_image.sh

      # Cache should be reused from prev execution
      # - name: Push
      #   uses: docker/build-push-action@v2
      #   with:
      #     file: Dockerfile
      #     context: .
      #     platforms: linux/amd64,linux/arm64/v8
      #     push: true
      #     tags: |
      #       algolia/renderscript:latest
      #       algolia/renderscript:${{ steps.env_var.outputs.RENDERSCRIPT_VERSION }}
      #     cache-from: type=gha
      #     cache-to: type=gha,mode=max
      #     build-args: |
      #       VERSION=${{ steps.env_var.outputs.RENDERSCRIPT_VERSION }}

name: Renderscript

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  COMMIT_SHA: ${{ github.event.pull_request.head.sha || github.sha }}

jobs:
  build-docker:
    runs-on: ubuntu-latest
    name: Build Dockers
    needs: integrations
    # if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2

      - name: Setting env var
        id: env_var
        shell: bash
        run: |
          echo "::set-output name=RENDERSCRIPT_VERSION::$(node -e 'console.log(require('./package.json').version)'')"


      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        with:
          use: linux/amd64,linux/arm/v8
        # For caching

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Base Image
        uses: docker/build-push-action@v2.7.0
        with:
          file: Dockerfile.pw
          context: .
          push: false
          tags: |
            algolia/renderscript-pw-chromium:latest
            algolia/renderscript-pw-chromium:${{ env.RENDERSCRIPT_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ env.RENDERSCRIPT_VERSION }}

      - name: Build Main Image
        uses: docker/build-push-action@v2.7.0
        with:
          file: Dockerfile
          context: .
          push: false
          tags: |
            algolia/renderscript:latest
            algolia/renderscript:${{ env.RENDERSCRIPT_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ env.RENDERSCRIPT_VERSION }}
